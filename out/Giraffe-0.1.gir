<?xml version="1.0"?>
<!-- Giraffe-0.1.gir generated by valac 0.50.2, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gdk" version="3.0"/>
<include name="Gtk" version="3.0"/>
<include name="Gee" version="0.8"/>
<include name="cairo" version="1.0"/>
<include name="GLib" version="2.0"/>
<package name="giraffe"/>
<c:include name="giraffe.h"/>
<namespace name="Giraffe" version="0.1" c:prefix="Giraffe" c:identifier-prefixes="Giraffe" c:symbol-prefix="giraffe">
	<class name="PieSegment" c:type="GirrafePieSegment" c:symbol-prefix="pie_segment" glib:type-name="GirrafePieSegment" glib:get-type="giraffe_pie_segment_get_type" glib:type-struct="PieSegmentClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PieSegmentPrivate" c:type="GirrafePieSegmentPrivate*"/>
		</field>
		<field name="color">
			<type name="Gdk.RGBA" c:type="GdkRGBA"/>
		</field>
		<field name="palette_color">
			<type name="gint" c:type="gint"/>
		</field>
		<constructor name="new" c:identifier="giraffe_pie_segment_new">
			<return-value transfer-ownership="full">
				<type name="Giraffe.PieSegment" c:type="GirrafePieSegment*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="title" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_title" c:identifier="giraffe_pie_segment_get_title">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_title" c:identifier="giraffe_pie_segment_set_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="val" writable="1" construct="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_val" c:identifier="giraffe_pie_segment_get_val">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_val" c:identifier="giraffe_pie_segment_set_val">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="use-palette-color" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_use_palette_color" c:identifier="giraffe_pie_segment_get_use_palette_color">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_use_palette_color" c:identifier="giraffe_pie_segment_set_use_palette_color">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="PieSegmentClass" c:type="GirrafePieSegmentClass" glib:is-gtype-struct-for="PieSegment">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="PieSegmentPrivate" c:type="GirrafePieSegmentPrivate" disguised="1"/>
	<class name="Pie" c:type="GiraffePie" c:symbol-prefix="pie" glib:type-name="GiraffePie" glib:get-type="giraffe_pie_get_type" glib:type-struct="PieClass" parent="Gtk.DrawingArea">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PiePrivate" c:type="GiraffePiePrivate*"/>
		</field>
		<field name="part_description_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="part_description_value_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="segment_hovered" allow-none="1">
			<type name="gint" c:type="gint*"/>
		</field>
		<field name="colorn">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="segments">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="Giraffe.PieSegment" c:type="GirrafePieSegment*"/>
			</type>
		</field>
		<field name="popover">
			<type name="Gtk.Popover" c:type="GtkPopover*"/>
		</field>
		<constructor name="new" c:identifier="giraffe_pie_new">
			<return-value transfer-ownership="none">
				<type name="Giraffe.Pie" c:type="GiraffePie*"/>
			</return-value>
		</constructor>
		<method name="part_description_area_draw_func" c:identifier="giraffe_pie_part_description_area_draw_func">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="cairo.Context" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_part_description_value" c:identifier="giraffe_pie_set_part_description_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</method>
		<virtual-method name="set_part_description_value" invoker="set_part_description_value">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</virtual-method>
		<method name="get_segment" c:identifier="giraffe_pie_get_segment">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Giraffe.PieSegment" c:type="GirrafePieSegment*"/>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_segment" c:identifier="giraffe_pie_remove_segment">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="n" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_segment_from_title" c:identifier="giraffe_pie_get_segment_from_title">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Giraffe.PieSegment" c:type="GirrafePieSegment*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_segment" c:identifier="giraffe_pie_add_segment">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="percentage" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<method name="redraw_canvas" c:identifier="giraffe_pie_redraw_canvas">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</method>
		<property name="max-val" writable="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_max_val" c:identifier="giraffe_pie_get_max_val">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_max_val" c:identifier="giraffe_pie_set_max_val">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="use-gradient" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_use_gradient" c:identifier="giraffe_pie_get_use_gradient">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="set_use_gradient" c:identifier="giraffe_pie_set_use_gradient">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="PieClass" c:type="GiraffePieClass" glib:is-gtype-struct-for="Pie">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
		</field>
		<field name="set_part_description_value">
			<callback name="set_part_description_value" c:type="set_part_description_value">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Giraffe.Pie" c:type="GiraffePie*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="PiePrivate" c:type="GiraffePiePrivate" disguised="1"/>
	<class name="AbsolutePie" c:type="GiraffeAbsolutePie" c:symbol-prefix="absolute_pie" glib:type-name="GiraffeAbsolutePie" glib:get-type="giraffe_absolute_pie_get_type" glib:type-struct="AbsolutePieClass" parent="Giraffe.Pie">
		<field name="parent_instance" readable="0" private="1">
			<type name="Giraffe.Pie" c:type="GiraffePie"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AbsolutePiePrivate" c:type="GiraffeAbsolutePiePrivate*"/>
		</field>
		<constructor name="new" c:identifier="giraffe_absolute_pie_new">
			<return-value transfer-ownership="none">
				<type name="Giraffe.AbsolutePie" c:type="GiraffeAbsolutePie*"/>
			</return-value>
		</constructor>
		<method name="add_segment" c:identifier="giraffe_absolute_pie_add_segment">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="pie_value" transfer-ownership="none">
					<type name="gfloat" c:type="gfloat"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_max_val" c:identifier="giraffe_absolute_pie_get_max_val">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
	</class>
	<record name="AbsolutePieClass" c:type="GiraffeAbsolutePieClass" glib:is-gtype-struct-for="AbsolutePie">
		<field name="parent_class" readable="0" private="1">
			<type name="Giraffe.PieClass" c:type="GiraffePieClass"/>
		</field>
	</record>
	<record name="AbsolutePiePrivate" c:type="GiraffeAbsolutePiePrivate" disguised="1"/>
	<class name="Bar" c:type="GiraffeBar" c:symbol-prefix="bar" glib:type-name="GiraffeBar" glib:get-type="giraffe_bar_get_type" glib:type-struct="BarClass" parent="Gtk.DrawingArea">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BarPrivate" c:type="GiraffeBarPrivate*"/>
		</field>
		<constructor name="new" c:identifier="giraffe_bar_new">
			<return-value transfer-ownership="none">
				<type name="Giraffe.Bar" c:type="GiraffeBar*"/>
			</return-value>
			<parameters>
				<parameter name="colour" transfer-ownership="none">
					<type name="Gdk.RGBA" c:type="GdkRGBA"/>
				</parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
				<parameter name="max_val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="update_rect" c:identifier="giraffe_bar_update_rect">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</method>
		<property name="colour" writable="1" construct="1">
			<type name="Gdk.RGBA" c:type="GdkRGBA"/>
		</property>
		<method name="get_colour" c:identifier="giraffe_bar_get_colour">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="Gdk.RGBA" c:type="GdkRGBA*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_colour" c:identifier="giraffe_bar_set_colour">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Gdk.RGBA" c:type="GdkRGBA"/>
				</parameter>
			</parameters>
		</method>
		<property name="val" writable="1" construct="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_val" c:identifier="giraffe_bar_get_val">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_val" c:identifier="giraffe_bar_set_val">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="max-val" writable="1" construct="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_max_val" c:identifier="giraffe_bar_get_max_val">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_max_val" c:identifier="giraffe_bar_set_max_val">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="min-val" writable="1">
			<type name="gdouble" c:type="gdouble"/>
		</property>
		<method name="get_min_val" c:identifier="giraffe_bar_get_min_val">
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="set_min_val" c:identifier="giraffe_bar_set_min_val">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<property name="title" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_title" c:identifier="giraffe_bar_get_title">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_title" c:identifier="giraffe_bar_set_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="unit" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_unit" c:identifier="giraffe_bar_get_unit">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_unit" c:identifier="giraffe_bar_set_unit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="BarClass" c:type="GiraffeBarClass" glib:is-gtype-struct-for="Bar">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
		</field>
	</record>
	<record name="BarPrivate" c:type="GiraffeBarPrivate" disguised="1"/>
	<class name="BarChart" c:type="GiraffeBarChart" c:symbol-prefix="bar_chart" glib:type-name="GiraffeBarChart" glib:get-type="giraffe_bar_chart_get_type" glib:type-struct="BarChartClass" parent="Giraffe.Chart">
		<field name="parent_instance" readable="0" private="1">
			<type name="Giraffe.Chart" c:type="GiraffeChart"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BarChartPrivate" c:type="GiraffeBarChartPrivate*"/>
		</field>
		<field name="bars">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="Giraffe.Bar" c:type="GiraffeBar*"/>
			</type>
		</field>
		<field name="bar_box">
			<type name="Gtk.Box" c:type="GtkBox*"/>
		</field>
		<constructor name="new" c:identifier="giraffe_bar_chart_new">
			<return-value transfer-ownership="none">
				<type name="Giraffe.BarChart" c:type="GiraffeBarChart*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="x_axis_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="y_axis_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add_bar" c:identifier="giraffe_bar_chart_add_bar">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="bar" transfer-ownership="none">
					<type name="Giraffe.Bar" c:type="GiraffeBar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_bar_from_information" c:identifier="giraffe_bar_chart_add_bar_from_information">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_bar_checks" c:identifier="giraffe_bar_chart_run_bar_checks">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</method>
		<method name="notify_actions" c:identifier="giraffe_bar_chart_notify_actions">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="ps" transfer-ownership="none" allow-none="1">
					<type name="GObject.ParamSpec" c:type="GParamSpec*"/>
				</parameter>
			</parameters>
		</method>
		<property name="unit" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_unit" c:identifier="giraffe_bar_chart_get_unit">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_unit" c:identifier="giraffe_bar_chart_set_unit">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="BarChartClass" c:type="GiraffeBarChartClass" glib:is-gtype-struct-for="BarChart">
		<field name="parent_class" readable="0" private="1">
			<type name="Giraffe.ChartClass" c:type="GiraffeChartClass"/>
		</field>
	</record>
	<record name="BarChartPrivate" c:type="GiraffeBarChartPrivate" disguised="1"/>
	<class name="Chart" c:type="GiraffeChart" c:symbol-prefix="chart" glib:type-name="GiraffeChart" glib:get-type="giraffe_chart_get_type" glib:type-struct="ChartClass" parent="Gtk.Grid" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.Grid" c:type="GtkGrid"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ChartPrivate" c:type="GiraffeChartPrivate*"/>
		</field>
		<field name="title_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="x_axis_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="y_axis_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="colourn">
			<type name="gint" c:type="gint"/>
		</field>
		<field name="frame">
			<type name="Gtk.Frame" c:type="GtkFrame*"/>
		</field>
		<field name="x_box">
			<type name="Gtk.Box" c:type="GtkBox*"/>
		</field>
		<field name="y_box">
			<type name="Gtk.Box" c:type="GtkBox*"/>
		</field>
		<field name="max_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="min_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="alloc">
			<type name="Gtk.Allocation" c:type="GtkAllocation"/>
		</field>
		<method name="size_alloc" c:identifier="giraffe_chart_size_alloc">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="alloc" transfer-ownership="none">
					<type name="Gtk.Allocation" c:type="GtkAllocation"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_max_value" c:identifier="giraffe_chart_get_max_value">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<virtual-method name="get_max_value" invoker="get_max_value">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</virtual-method>
		<method name="get_min_value" c:identifier="giraffe_chart_get_min_value">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<virtual-method name="get_min_value" invoker="get_min_value">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</virtual-method>
		<property name="x-axis-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_x_axis_name" c:identifier="giraffe_chart_get_x_axis_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_x_axis_name" c:identifier="giraffe_chart_set_x_axis_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="y-axis-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_y_axis_name" c:identifier="giraffe_chart_get_y_axis_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_y_axis_name" c:identifier="giraffe_chart_set_y_axis_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="title" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_title" c:identifier="giraffe_chart_get_title">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_title" c:identifier="giraffe_chart_set_title">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ChartClass" c:type="GiraffeChartClass" glib:is-gtype-struct-for="Chart">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.GridClass" c:type="GtkGridClass"/>
		</field>
		<field name="get_max_value">
			<callback name="get_max_value" c:type="get_max_value">
				<return-value transfer-ownership="full">
					<type name="gdouble" c:type="gdouble"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Giraffe.Chart" c:type="GiraffeChart*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_min_value">
			<callback name="get_min_value" c:type="get_min_value">
				<return-value transfer-ownership="full">
					<type name="gdouble" c:type="gdouble"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Giraffe.Chart" c:type="GiraffeChart*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="ChartPrivate" c:type="GiraffeChartPrivate" disguised="1"/>
	<class name="LineViewer" c:type="GiraffeLineViewer" c:symbol-prefix="line_viewer" glib:type-name="GiraffeLineViewer" glib:get-type="giraffe_line_viewer_get_type" glib:type-struct="LineViewerClass" parent="Gtk.DrawingArea">
		<field name="parent_instance" readable="0" private="1">
			<type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LineViewerPrivate" c:type="GiraffeLineViewerPrivate*"/>
		</field>
		<field name="lines">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="Giraffe.Line" c:type="GiraffeLine*"/>
			</type>
		</field>
		<field name="popover">
			<type name="Gtk.Popover" c:type="GtkPopover*"/>
		</field>
		<field name="popover_box">
			<type name="Gtk.Box" c:type="GtkBox*"/>
		</field>
		<field name="popover_title">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="popover_name">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="popover_value_label">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="min_val">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<field name="max_val">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<field name="min_val_x">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<field name="max_val_x">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<field name="override_min_val" allow-none="1">
			<type name="gdouble" c:type="gdouble*"/>
		</field>
		<field name="override_max_val" allow-none="1">
			<type name="gdouble" c:type="gdouble*"/>
		</field>
		<field name="override_min_val_x" allow-none="1">
			<type name="gdouble" c:type="gdouble*"/>
		</field>
		<field name="override_max_val_x" allow-none="1">
			<type name="gdouble" c:type="gdouble*"/>
		</field>
		<field name="use_popover">
			<type name="gboolean" c:type="gboolean"/>
		</field>
		<method name="redraw_canvas" c:identifier="giraffe_line_viewer_redraw_canvas">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</method>
		<method name="generate_max_mins" c:identifier="giraffe_line_viewer_generate_max_mins">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</method>
		<method name="update_popover" c:identifier="giraffe_line_viewer_update_popover">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="point" transfer-ownership="none">
					<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint"/>
				</parameter>
				<parameter name="line" transfer-ownership="none">
					<type name="Giraffe.Line" c:type="GiraffeLine"/>
				</parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="update_popover" invoker="update_popover">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="point" transfer-ownership="none">
					<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint"/>
				</parameter>
				<parameter name="line" transfer-ownership="none">
					<type name="Giraffe.Line" c:type="GiraffeLine"/>
				</parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<constructor name="new" c:identifier="giraffe_line_viewer_new">
			<return-value transfer-ownership="none">
				<type name="Giraffe.LineViewer" c:type="GiraffeLineViewer*"/>
			</return-value>
		</constructor>
		<glib:signal name="popover-setter">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="point" transfer-ownership="none">
					<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint"/>
				</parameter>
				<parameter name="line" transfer-ownership="none">
					<type name="Giraffe.Line" c:type="GiraffeLine"/>
				</parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="LineViewerClass" c:type="GiraffeLineViewerClass" glib:is-gtype-struct-for="LineViewer">
		<field name="parent_class" readable="0" private="1">
			<type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
		</field>
		<field name="update_popover">
			<callback name="update_popover" c:type="update_popover">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Giraffe.LineViewer" c:type="GiraffeLineViewer*"/>
					</parameter>
					<parameter name="point" transfer-ownership="none">
						<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint"/>
					</parameter>
					<parameter name="line" transfer-ownership="none">
						<type name="Giraffe.Line" c:type="GiraffeLine"/>
					</parameter>
					<parameter name="title" transfer-ownership="none">
						<type name="Gtk.Label" c:type="GtkLabel*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="Gtk.Label" c:type="GtkLabel*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none">
						<type name="Gtk.Label" c:type="GtkLabel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="LineViewerPrivate" c:type="GiraffeLineViewerPrivate" disguised="1"/>
	<class name="LineGraph" c:type="GiraffeLineGraph" c:symbol-prefix="line_graph" glib:type-name="GiraffeLineGraph" glib:get-type="giraffe_line_graph_get_type" glib:type-struct="LineGraphClass" parent="Giraffe.Chart">
		<field name="parent_instance" readable="0" private="1">
			<type name="Giraffe.Chart" c:type="GiraffeChart"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LineGraphPrivate" c:type="GiraffeLineGraphPrivate*"/>
		</field>
		<field name="line_viewer">
			<type name="Giraffe.LineViewer" c:type="GiraffeLineViewer*"/>
		</field>
		<field name="min_label_x">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="max_label_x">
			<type name="Gtk.Label" c:type="GtkLabel*"/>
		</field>
		<field name="unit">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="unit_x">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<constructor name="new" c:identifier="giraffe_line_graph_new">
			<return-value transfer-ownership="none">
				<type name="Giraffe.LineGraph" c:type="GiraffeLineGraph*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="x_axis_title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="y_axis_title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add_line" c:identifier="giraffe_line_graph_add_line">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="Giraffe.Line" c:type="GiraffeLine*"/>
				</parameter>
			</parameters>
		</method>
<<<<<<< HEAD
=======
		<method name="add_point" c:identifier="giraffe_line_graph_add_point">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint*"/>
			</return-value>
			<parameters>
				<parameter name="line_n" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="name" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
		<method name="update_labels" c:identifier="giraffe_line_graph_update_labels">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</method>
		<virtual-method name="update_labels" invoker="update_labels">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</virtual-method>
		<method name="get_max_value_x" c:identifier="giraffe_line_graph_get_max_value_x">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="get_min_value_x" c:identifier="giraffe_line_graph_get_min_value_x">
			<return-value transfer-ownership="full">
				<type name="gdouble" c:type="gdouble"/>
			</return-value>
		</method>
		<method name="update_popover" c:identifier="giraffe_line_graph_update_popover">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="point" transfer-ownership="none">
					<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint"/>
				</parameter>
				<parameter name="line" transfer-ownership="none">
					<type name="Giraffe.Line" c:type="GiraffeLine"/>
				</parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="update_popover" invoker="update_popover">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="point" transfer-ownership="none">
					<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint"/>
				</parameter>
				<parameter name="line" transfer-ownership="none">
					<type name="Giraffe.Line" c:type="GiraffeLine"/>
				</parameter>
				<parameter name="title" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="Gtk.Label" c:type="GtkLabel*"/>
				</parameter>
			</parameters>
		</virtual-method>
>>>>>>> meson
	</class>
	<record name="LineGraphClass" c:type="GiraffeLineGraphClass" glib:is-gtype-struct-for="LineGraph">
		<field name="parent_class" readable="0" private="1">
			<type name="Giraffe.ChartClass" c:type="GiraffeChartClass"/>
		</field>
		<field name="update_labels">
			<callback name="update_labels" c:type="update_labels">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Giraffe.LineGraph" c:type="GiraffeLineGraph*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="update_popover">
			<callback name="update_popover" c:type="update_popover">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Giraffe.LineGraph" c:type="GiraffeLineGraph*"/>
					</parameter>
					<parameter name="point" transfer-ownership="none">
						<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint"/>
					</parameter>
					<parameter name="line" transfer-ownership="none">
						<type name="Giraffe.Line" c:type="GiraffeLine"/>
					</parameter>
					<parameter name="title" transfer-ownership="none">
						<type name="Gtk.Label" c:type="GtkLabel*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="Gtk.Label" c:type="GtkLabel*"/>
					</parameter>
					<parameter name="val" transfer-ownership="none">
						<type name="Gtk.Label" c:type="GtkLabel*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="LineGraphPrivate" c:type="GiraffeLineGraphPrivate" disguised="1"/>
	<class name="LineGraphTime" c:type="GiraffeLineGraphTime" c:symbol-prefix="line_graph_time" glib:type-name="GiraffeLineGraphTime" glib:get-type="giraffe_line_graph_time_get_type" glib:type-struct="LineGraphTimeClass" parent="Giraffe.LineGraph">
		<field name="parent_instance" readable="0" private="1">
			<type name="Giraffe.LineGraph" c:type="GiraffeLineGraph"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LineGraphTimePrivate" c:type="GiraffeLineGraphTimePrivate*"/>
		</field>
		<field name="timespan_shown" allow-none="1">
			<type name="GLib.TimeSpan" c:type="GTimeSpan*"/>
		</field>
		<constructor name="new" c:identifier="giraffe_line_graph_time_new">
			<return-value transfer-ownership="none">
				<type name="Giraffe.LineGraphTime" c:type="GiraffeLineGraphTime*"/>
			</return-value>
			<parameters>
				<parameter name="title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="x_axis_title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="y_axis_title" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add_point" c:identifier="giraffe_line_graph_time_add_point">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint*"/>
			</return-value>
			<parameters>
				<parameter name="line_n" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="name" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="GLib.DateTime" c:type="GDateTime*"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="gdouble"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="LineGraphTimeClass" c:type="GiraffeLineGraphTimeClass" glib:is-gtype-struct-for="LineGraphTime">
		<field name="parent_class" readable="0" private="1">
			<type name="Giraffe.LineGraphClass" c:type="GiraffeLineGraphClass"/>
		</field>
	</record>
	<record name="LineGraphTimePrivate" c:type="GiraffeLineGraphTimePrivate" disguised="1"/>
	<record name="LinePoint" c:type="GiraffeLinePoint" c:symbol-prefix="line_point" glib:type-name="GiraffeLinePoint" glib:get-type="giraffe_line_point_get_type">
		<field name="x">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<field name="y">
			<type name="gdouble" c:type="gdouble"/>
		</field>
		<field name="name" allow-none="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
	</record>
	<record name="Line" c:type="GiraffeLine" c:symbol-prefix="line" glib:type-name="GiraffeLine" glib:get-type="giraffe_line_get_type">
		<field name="points">
			<type name="Gee.ArrayList" c:type="GeeArrayList*">
				<type name="Giraffe.LinePoint" c:type="GiraffeLinePoint*"/>
			</type>
		</field>
		<field name="title" allow-none="1">
			<type name="utf8" c:type="gchar*"/>
		</field>
		<field name="color">
			<type name="Gdk.RGBA" c:type="GdkRGBA"/>
		</field>
	</record>
</namespace>
</repository>
